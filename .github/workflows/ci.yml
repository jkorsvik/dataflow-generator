name: CI

on:
  push:
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    container: ghcr.io/astral-sh/uv:python3.12-bookworm-slim
    steps:
      - uses: actions/checkout@v4
      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-
      - name: Install dependencies
        run: uv sync --dev
      - name: Run mypy
        run: uv run mypy src/
        continue-on-error: true

  test:
    runs-on: ubuntu-latest
    container: ghcr.io/astral-sh/uv:python3.12-bookworm-slim
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-
      - name: Install dependencies
        run: uv sync --dev
      - name: Run tests
        run: uv run pytest tests/ --cov=src --cov-report=xml
      - name: Generate coverage badge and check threshold
        # This step generates the coverage badge using coverage.xml
        # and checks the coverage percentage using the .coverage file.
        run: |
          uv run coverage-badge -o coverage.svg
          COVERAGE=$(uv run coverage report | grep TOTAL | awk '{print $4}' | sed 's/%//')
          echo "Coverage is $COVERAGE%"
          if [ "$COVERAGE" -lt 40 ]; then
            echo "Coverage below threshold: $COVERAGE%"
            exit 1
          fi
      - name: Generate tests badge
        # This step generates a simple badge indicating tests passed.
        run: uv run anybadge --label=tests --value=passing --file=tests.svg --color=green
      - name: Upload coverage artifacts and badges
        # Uploads the raw coverage data and the generated badges.
        uses: actions/upload-artifact@v4
        with:
          name: coverage-artifacts # You might rename this artifact if desired
          path: |
            coverage.xml
            .coverage
            coverage.svg
            tests.svg

  publish:
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Trigger publish workflow
        if: github.ref == 'refs/heads/main'
        uses: ./.github/workflows/publish.yml
